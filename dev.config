%% -*- mode: erlang -*-
%% Copyright (c) 2022 Peter Morgan <peter.james.morgan@gmail.com>
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%% http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.

[{kernel, [{logger_level, notice},
           {logger,
            [{module_level, debug, [pgmp_replication_logical_snapshot_manager]},

             {module_level, notice, [supervisor_bridge,
                                     supervisor]},

             {module_level, emergency, [application_controller]},

             {handler,
              default,
              logger_std_h,
              #{formatter => {logger_formatter,
                              #{template => [[logger_formatter, header],
                                             {pid, [" ", pid, ""], ""},
                                             {mfa, [" ", mfa, ":", line], ""},
                                             "\n",
                                             msg,
                                             "\n"],
                                legacy_header => true,
                                single_line => false}}}}]}]},

 {pgmp, [%% When the protocol socket crashes have the last N
         %% events available in the stacktrace log.
         {pgmp_socket_log_n, 20},

         %% Enable or disable event logging on the underlying protocol
         %% socket.
         %%
         {pgmp_socket_log, true},

         %% Enable or disable tracing on underlying protocol socket.
         %% {pgmp_socket_trace, true},

         %% database hostname to initiate a connection.
         %%
         %% {database_hostname, "192.168.1.230"},
         {database_hostname, "localhost"},

         {database_user, <<"pmorgan">>},
         {database_name, <<"pmorgan">>},
%%         {database_name, <<"scram">>},
%%         {database_password, <<"98MgGgBpW4xmOiU0">>},

         {database_replication, <<"true">>},

%%         {pgmp_replication_enabled, true},

         %% Control whether the type manager is enabled on application
         %% startup. Default is for the type manager to be
         %% started. This stanza can normally be safely commented out.
         %%
         %% {pgmp_types_enabled, false},

         %% Enable or disable tracing of the type manager
         %%
         %% {pgmp_types_trace, true},

         {pgmp_replication_logical_snapshot_manager_trace, true},

         %% {pgmp_connection_trace, true},

         {replication_logical_publication_names, <<"pub,def">>},
         %% {replication_logical_publication_names, <<"pub">>},


         %% send a client ping request if we haven't heard from the
         %% WAL sender within this timeout in milisecond.
         %%
         {replication_ping_timeout, 30_000},

         %% wait for this timeout in milisecond to hear from the WAL
         %% sender if we initiate a ping request.
         %%
         {replication_ping_no_reply_timeout, 5_000},

         %% enable or disable tracing on the protocol middleman
         %% between the underlying socket.
         %%
         %% {pgmp_mm_trace, true},

         %% when the protocol middleman crashes have the last N
         %% events available in the stacktrace log.
         {pgmp_mm_log_n, 20},

         %% enable or disable event logging in the protocol middleman.
         %%
         {pgmp_mm_log, true}]}].
